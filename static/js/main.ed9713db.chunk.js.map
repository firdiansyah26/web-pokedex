{"version":3,"sources":["redux/actionTypes.js","redux/detailReducer/reducer.js","redux/reducers.js","config/config.js","redux/detailReducer/sagas.js","redux/sagas.js","redux/stores.js","assets/images/logo_pokemon.png","template/headerTemplate.js","routes/Home/Home.js","redux/detailReducer/actions.js","routes/Detail/Detail.js","routes/router.js","App.js","reportWebVitals.js","index.js"],"names":["GET_DETAIL_POKEMON","GET_DETAIL_POKEMON_SUCCESS","HANDLE_STATE_DETAIL","initState","loader","catchField","detail","myPokemon","DetailReducer","state","action","type","field","value","HEADER","URL","GET","url","axios","get","then","res","catch","err","getDetail","rootSaga","param","call","config","id","_response","put","actionType","data","console","log","all","takeLatest","getState","DetailSagas","sagaMiddleware","createSagaMiddleware","middlewares","persistConfig","key","storage","whitelist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combine","combineReducers","reducers","persistedReducer","persistReducer","stores","createStore","applyMiddleware","run","sagas","HeaderTemplate","to","src","pokemonLogo","className","overlay","Item","rel","href","onClick","e","preventDefault","MenuOutlined","Meta","Card","Home","history","useHistory","dispatch","useDispatch","detailState","useSelector","_isMyPokemon","location","pathname","includes","QUERY_LIST","gql","onClickDetail","useCallback","idx","_idx","push","name","onRemove","_dum","filter","obj1","idx1","Fragment","query","variables","_data","loading","error","undefined","pokemons","results","tag","blocking","length","style","textAlign","color","fontSize","data-test-id","map","obj","pokemonDetail","hoverable","width","margin","height","cover","alt","sprites","front_default","image","title","placement","shape","danger","size","icon","DeleteOutlined","Title","Typography","Text","Detail","idPokemon","useParams","useState","success","setSuccess","setName","qString","search","replace","split","_name","_catch","_index","useEffect","onClickBack","goBack","onClickCatch","chance","Math","random","onSaveCatch","notification","message","visible","onOk","onCancel","onChange","target","padding","other","dream_world","span","PreviewGroup","front_shiny","back_default","back_shiny","paddingBottom","types","keyboard","AppRoute","path","exact","client","ApolloClient","uri","persistor","persistStore","App","store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9713db.chunk.js","sourcesContent":["export const GET_DETAIL_POKEMON = 'GET_DETAIL_POKEMON'\nexport const GET_DETAIL_POKEMON_SUCCESS = 'GET_DETAIL_POKEMON_SUCCESS'\nexport const HANDLE_STATE_DETAIL = 'HANDLE_STATE_DETAIL'","import {\n    HANDLE_STATE_DETAIL, GET_DETAIL_POKEMON_SUCCESS\n} from '../actionTypes'\n\nconst initState = {\n    loader: false,\n    catchField: null,\n    detail: null,\n    myPokemon: []\n}\n\nconst detailReducer = (state = initState, action) => {\n    switch (action.type) {\n        case HANDLE_STATE_DETAIL:\n            return {\n                ...state, [action.field]: action.value\n            }\n        case GET_DETAIL_POKEMON_SUCCESS:\n            return {\n                ...state, detail: action.value\n            }\n        default:\n            return state\n    }\n}\n\nexport default detailReducer","import DetailReducer from '../redux/detailReducer/reducer'\n\nexport default {\n    DetailReducer\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://pokeapi.co'\nconst HEADER = {\n    'Content-Type': 'application/json'\n}\n\nexport const URL = {\n    DETAIL_POKEMON: \"/api/v2/pokemon\",\n}\n\n// GLOBAL API METHOE\nexport function GET(url) {\n    return axios.get(BASE_URL + url, HEADER)\n        .then((res) => {\n            return res\n        })\n        .catch((err) => {\n            return err\n        })\n}\n","import * as actionType from '../actionTypes'\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport * as config  from '../../config/config'\n\n\nexport function* getDetail(param) {\n    try {\n        let _response = yield call(config.GET, config.URL.DETAIL_POKEMON + \"/\" + param.id)\n        yield put({ type: actionType.GET_DETAIL_POKEMON_SUCCESS, value: _response.data })\n    } catch (error) {\n        console.log('error : ', error)\n    }\n}\n\nexport default function* rootSaga() {\n    yield all([\n        takeLatest(actionType.GET_DETAIL_POKEMON, getDetail),\n    ])\n}","import { all } from 'redux-saga/effects';\n\nimport DetailSagas from \"../redux/detailReducer/sagas\"\n\nexport default function* rootSaga(getState) {\n    yield all([\n        DetailSagas()\n    ]);\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['DetailReducer']\n}\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst combine = combineReducers({...reducers})\nconst persistedReducer = persistReducer(persistConfig, combine)\n\nconst stores = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nsagaMiddleware.run(sagas);\nexport default stores;","export default __webpack_public_path__ + \"static/media/logo_pokemon.e80c762b.png\";","import { Link } from 'react-router-dom';\nimport pokemonLogo from './../assets/images/logo_pokemon.png'\n\nimport { Menu, Dropdown } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\n\nconst HeaderTemplate = () => {\n    return (\n        <header>\n            <Link to=\"/\"><img src={pokemonLogo} className=\"logo-style\" /></Link>\n            <div className=\"menu-nonresponsive\">\n                <Link className=\"nav-links\" to=\"/\">Home</Link>\n                <Link className=\"nav-links\" to=\"/listPokemon\">My Pokemon List</Link>\n            </div>\n\n            <div className=\"menu-responsive\">\n                <Dropdown overlay={\n                    <Menu>\n                        <Menu.Item>\n                            <a rel=\"noopener noreferrer\" href=\"/\">Home</a>\n                            {/* <Link className=\"nav-links\" to=\"/\">Home</Link> */}\n                        </Menu.Item>\n                        <Menu.Item>\n                            <a rel=\"noopener noreferrer\" href=\"/listPokemon\">My Pokemon List</a>\n                            {/* <Link className=\"nav-links\" to=\"/listPokemon\">My Pokemon List</Link> */}\n                        </Menu.Item>\n                    </Menu>\n                }>\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}><MenuOutlined />\n                    </a>\n                </Dropdown>\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderTemplate","import React from 'react'\n\nimport { useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport gql from 'graphql-tag'\nimport { Query } from \"react-apollo\"\nimport BlockUi from 'react-block-ui';\nimport { Card, Tag, Button, Tooltip } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { handleState } from \"../../redux/detailReducer/actions\";\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n\n    let detailState = useSelector(state => state.DetailReducer);\n    let _isMyPokemon = window.location.pathname.includes('listPokemon')\n\n    let QUERY_LIST = gql`\n    query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            id\n            name\n            image\n          }\n        }\n      }\n    `;\n\n    let onClickDetail = useCallback((param, idx) => {\n        let _idx = ''\n        if (_isMyPokemon) _idx = `&idx=${idx}`\n        history.push(`/detailPokemon/${param.id}?name=${param.name}&catch=${!_isMyPokemon}${_idx}`)\n    }, [history])\n\n    let onRemove = useCallback((idx) => {\n        let _arr = detailState.myPokemon\n        let _dum = _arr.filter((obj1, idx1) => idx1 !== idx)\n        dispatch(handleState('myPokemon', _dum))\n\n    }, [detailState, dispatch])\n\n    return (\n        <React.Fragment>\n            <div>\n                <Query query={QUERY_LIST} variables={{ \"limit\": 150 }}>\n                    {({ loading, error, data }) => {\n                        if (!error && data !== undefined) {\n                            let _data\n\n                            if (_isMyPokemon) _data = detailState.myPokemon\n                            else _data = data.pokemons.results\n\n                            return (\n                                <div>\n                                    <BlockUi tag=\"div\" blocking={loading}>\n                                        {\n                                            detailState.myPokemon.length !== 0 ? (<h3 style={{ textAlign: 'center' }}> <Tag color=\"#87d068\" style={{ fontSize: '15px' }}>I have {detailState.myPokemon.length} pokemon(s)</Tag></h3>) : ''\n                                        }\n                                        <main>\n                                            <div data-test-id=\"content-test-id\" className=\"content\">\n                                                {\n                                                    _data.map((obj, idx) => {\n                                                        return (\n                                                            <div key={idx}>\n                                                                <Card\n                                                                    onClick={() => onClickDetail(_isMyPokemon ? obj.pokemonDetail : obj, idx)}\n                                                                    hoverable\n                                                                    style={{ width: 150, margin: '10px', height: '230px' }}\n                                                                    cover={<img alt=\"pokemon-image\" src={_isMyPokemon ? obj.pokemonDetail.sprites.front_default : obj.image} />}\n                                                                >\n                                                                    <Meta title={obj.name} />\n                                                                </Card>\n                                                                {\n                                                                    _isMyPokemon ?\n                                                                        <Tooltip placement=\"topLeft\" title=\"Remove Pokemon\">\n                                                                            <Button type=\"primary\" shape=\"round\" danger size={'small'} icon={<DeleteOutlined />} onClick={() => onRemove(idx)}></Button>\n                                                                        </Tooltip>\n                                                                        : ''\n                                                                }\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </main>\n                                    </BlockUi>\n                                </div>\n                            )\n                        } else return <div></div>\n                    }}\n                </Query>\n            </div>\n        </React.Fragment >\n    )\n}\n\nexport default Home\n","import * as actionType from '../actionTypes'\n\nexport const handleState = (field, value) => {\n    return {\n        type: actionType.HANDLE_STATE_DETAIL,\n        field,\n        value\n    }\n}\n\nexport const getDetailData = (param) => {\n    return {\n        type: actionType.GET_DETAIL_POKEMON,\n        id: param\n    }\n}","import React, { useEffect, useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport gql from 'graphql-tag'\nimport { Query } from \"react-apollo\"\n\nimport BlockUi from 'react-block-ui';\n\nimport { Image, Typography, Button, Card, Row, Col, Input, Modal, notification } from 'antd';\nimport { getDetailData } from \"../../redux/detailReducer/actions\";\n\nconst { Title, Text } = Typography;\n\nconst Detail = () => {\n    let history = useHistory();\n    let detailState = useSelector(state => state.DetailReducer);\n    let { idPokemon } = useParams();\n    let dispatch = useDispatch();\n    let [success, setSuccess] = useState(undefined)\n    let [name, setName] = useState()\n    let qString = window.location.search.replace('?', '').split('&')\n    let _name = qString[0].replace('name=', '')\n    let _catch = qString[1].replace('catch=', '')\n    let _index = qString.length > 2 ? qString[2].replace('idx=', '') : null\n\n    let QUERY_LIST = gql`\n    query pokemon($name: String!) {\n        pokemon(name: $name) {\n          id\n          name\n          sprites {\n            front_default\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          types {\n            type {\n              name\n            }\n          }\n        }\n      }\n    `;\n\n    useEffect(() => {\n        dispatch(getDetailData(idPokemon))\n    }, [dispatch, idPokemon])\n\n    const onClickBack = useCallback(() => {\n        history.goBack()\n    }, [history])\n\n    const onClickCatch = useCallback(() => {\n        var chance = Math.random();\n        if (chance < 0.5) {\n            setSuccess(false)\n        }\n        else {\n            setSuccess(true)\n        }\n    })\n\n    const onSaveCatch = useCallback(() => {\n        let _arr = detailState.myPokemon\n        _arr.push({\n            name: name,\n            pokemonDetail: detailState.detail\n        })\n\n        notification['success']({\n            message: 'Yeay, success catch a pokemon ' + detailState.detail.name + ' with name ' + name + ' !',\n        });\n\n        setSuccess(undefined)\n        setName(undefined)\n    }, [detailState, name, setName, setSuccess])\n\n    return (\n        <React.Fragment>\n            <Modal\n                title=\"Give me a name!\"\n                visible={success}\n                onOk={onSaveCatch}\n                onCancel={() => {\n                    setSuccess(undefined)\n                    setName(undefined)\n                }}\n            >\n                <Input value={name} onChange={(e) => setName(e.target.value)} />\n            </Modal>\n\n            <Query query={QUERY_LIST} variables={{ \"name\": _name }}>\n                {({ loading, error, data }) => {\n                    if (!error && data !== undefined && detailState.detail) {\n                        return (\n                            <div>\n                                <BlockUi tag=\"div\" blocking={loading}>\n                                    <Row>\n                                        <div style={{ padding: '5%', width: '100%' }}>\n                                            <Typography>\n                                                <Button type=\"default\" size={'large'} onClick={onClickBack}>Back</Button>\n                                                <Title style={{ textAlign: 'center' }}>{detailState.detail.name}</Title><br />\n                                                {_catch === 'false' && detailState.myPokemon[_index] ? <h5 style={{ textAlign: 'center' }}>The Name is '{_index !== null ? detailState.myPokemon[_index].name : ''}'</h5> : ''}\n                                                <Card\n                                                    hoverable\n                                                    style={{ width: '100%' }}\n                                                    cover={<img alt=\"pokemon-image\" src={detailState.detail.sprites.other.dream_world.front_default} />}\n                                                >\n                                                    {\n                                                        success === undefined || success === false ?\n                                                            _catch === 'true' ?\n                                                                <Button type=\"default\" shape=\"round\" size={'large'} onClick={onClickCatch}>\n                                                                    Catch Me!\n                                                                </Button>\n                                                                : null\n                                                            : null\n                                                    }\n                                                    {\n                                                        success === false ? <h4 style={{ color: 'red' }}>Oops, you can't catch me :p</h4> : null\n                                                    }\n\n                                                </Card>\n                                            </Typography>\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className=\"content-detail\">\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.front_default ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.front_default}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.front_shiny ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.front_shiny}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.back_default ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.back_default}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.back_shiny ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.back_shiny}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                        </div>\n                                    </Row>\n                                    <Title style={{ textAlign: 'center' }}>Types</Title>\n                                    <Row style={{ paddingBottom: '10%' }}>\n                                        <div className=\"content-detail\">\n                                            <Col span={24}>\n                                                {\n                                                    detailState.detail.types.map((obj, idx) => {\n                                                        return (\n                                                            <Text key={idx} keyboard>{obj.type.name}</Text>\n                                                        )\n                                                    })\n                                                }\n                                            </Col>\n                                        </div>\n                                    </Row>\n                                </BlockUi>\n                            </div>\n                        )\n                    } else return <div></div>\n                }}\n            </Query>\n        </React.Fragment >\n    )\n}\n\nexport default Detail","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport TemplateHeader from './../template/headerTemplate'\nimport Home from './Home/Home';\nimport Detail from './Detail/Detail'\n\nconst AppRoute = () => {\n    return (\n        <Router>\n            <TemplateHeader />\n\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Home />\n                </Route>\n                <Route path=\"/detailPokemon/:idPokemon\">\n                    <Detail />\n                </Route>\n                <Route path=\"/listPokemon\" exact>\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\n\nexport default AppRoute;\n","import './App.css';\nimport './assets/styles/styles.scss'\nimport 'react-block-ui/style.css';\nimport 'antd/dist/antd.css';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost'\n\nimport stores from './redux/stores';\nimport AppRoute from './routes/router';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql'\n})\nlet persistor = persistStore(stores);\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={stores}>\n        <PersistGate loading={null} persistor={persistor}>\n          <AppRoute />\n        </PersistGate>\n      </Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}