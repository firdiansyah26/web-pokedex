[{"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/App.js":"1","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/sagas.js":"2","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/actions.js":"3","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/config/config.js":"4","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/Home/Home.js":"5","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/Detail/Detail.js":"6","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/reducer.js":"7","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/stores.js":"8","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/router.js":"9","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/template/headerTemplate.js":"10","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/actionTypes.js":"11","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/reducers.js":"12"},{"size":837,"mtime":1612148234328,"results":"13","hashOfConfig":"14"},{"size":580,"mtime":1612097320550,"results":"15","hashOfConfig":"14"},{"size":315,"mtime":1612095364312,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1612083285274,"results":"17","hashOfConfig":"14"},{"size":4942,"mtime":1612148564791,"results":"18","hashOfConfig":"14"},{"size":9682,"mtime":1612103900358,"results":"19","hashOfConfig":"14"},{"size":594,"mtime":1612087549837,"results":"20","hashOfConfig":"14"},{"size":891,"mtime":1612097293214,"results":"21","hashOfConfig":"14"},{"size":699,"mtime":1612098950742,"results":"22","hashOfConfig":"14"},{"size":1447,"mtime":1612099127894,"results":"23","hashOfConfig":"14"},{"size":182,"mtime":1612078781530,"results":"24","hashOfConfig":"14"},{"size":96,"mtime":1612079957317,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"im7oow",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/App.js",[],["57","58"],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/sagas.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/actions.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/config/config.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/Home/Home.js",["59","60"],"import React from 'react'\n\nimport { useCallback } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport gql from 'graphql-tag'\nimport { Query } from \"react-apollo\"\nimport BlockUi from 'react-block-ui';\nimport { Card, Tag, Button, Tooltip } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { handleState } from \"../../redux/detailReducer/actions\";\n\nconst { Meta } = Card;\n\nconst Home = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n\n    let detailState = useSelector(state => state.DetailReducer);\n    let _isMyPokemon = window.location.pathname.includes('listPokemon')\n\n    let QUERY_LIST = gql`\n    query pokemons($limit: Int, $offset: Int) {\n        pokemons(limit: $limit, offset: $offset) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            id\n            name\n            image\n          }\n        }\n      }\n    `;\n\n    let onClickDetail = useCallback((param, idx) => {\n        let _idx = ''\n        if (_isMyPokemon) _idx = `&idx=${idx}`\n        history.push(`/detailPokemon/${param.id}?name=${param.name}&catch=${!_isMyPokemon}${_idx}`)\n    }, [history])\n\n    let onRemove = useCallback((idx) => {\n        let _arr = detailState.myPokemon\n        let _dum = _arr.filter((obj1, idx1) => idx1 !== idx)\n        dispatch(handleState('myPokemon', _dum))\n\n    }, [detailState, dispatch])\n\n    return (\n        <React.Fragment>\n            <div>\n                <Query query={QUERY_LIST} variables={{ \"limit\": 150 }}>\n                    {({ loading, error, data }) => {\n                        if (!error && data !== undefined) {\n                            let _data\n\n                            if (_isMyPokemon) _data = detailState.myPokemon\n                            else _data = data.pokemons.results\n\n                            return (\n                                <div>\n                                    <BlockUi tag=\"div\" blocking={loading}>\n                                        {\n                                            detailState.myPokemon.length !== 0 ? (<h3 style={{ textAlign: 'center' }}> <Tag color=\"#87d068\" style={{ fontSize: '15px' }}>I have {detailState.myPokemon.length} pokemon(s)</Tag></h3>) : ''\n                                        }\n                                        <main>\n                                            <div data-test-id=\"content-test-id\" className=\"content\">\n                                                {\n                                                    _data.map((obj, idx) => {\n                                                        return (\n                                                            <div key={idx}>\n                                                                <Card\n                                                                    onClick={() => onClickDetail(_isMyPokemon ? obj.pokemonDetail : obj, idx)}\n                                                                    hoverable\n                                                                    style={{ width: 150, margin: '10px', height: '230px' }}\n                                                                    cover={<img alt=\"pokemon-image\" src={_isMyPokemon ? obj.pokemonDetail.sprites.front_default : obj.image} />}\n                                                                >\n                                                                    <Meta title={obj.name} />\n                                                                </Card>\n                                                                {\n                                                                    _isMyPokemon ?\n                                                                        <Tooltip placement=\"topLeft\" title=\"Remove Pokemon\">\n                                                                            <Button type=\"primary\" shape=\"round\" danger size={'small'} icon={<DeleteOutlined />} onClick={() => onRemove(idx)}></Button>\n                                                                        </Tooltip>\n                                                                        : ''\n                                                                }\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        </main>\n                                    </BlockUi>\n                                </div>\n                            )\n                        } else return <div></div>\n                    }}\n                </Query>\n            </div>\n        </React.Fragment >\n    )\n}\n\nexport default Home\n","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/Detail/Detail.js",["61","62"],"import React, { useEffect, useCallback, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport gql from 'graphql-tag'\nimport { Query } from \"react-apollo\"\n\nimport BlockUi from 'react-block-ui';\n\nimport { Image, Typography, Button, Card, Row, Col, Input, Modal, notification } from 'antd';\nimport { getDetailData } from \"../../redux/detailReducer/actions\";\n\nconst { Title, Text } = Typography;\n\nconst Detail = () => {\n    let history = useHistory();\n    let detailState = useSelector(state => state.DetailReducer);\n    let { idPokemon } = useParams();\n    let dispatch = useDispatch();\n    let [success, setSuccess] = useState(undefined)\n    let [name, setName] = useState()\n    let qString = window.location.search.replace('?', '').split('&')\n    let _name = qString[0].replace('name=', '')\n    let _catch = qString[1].replace('catch=', '')\n    let _index = qString.length > 2 ? qString[2].replace('idx=', '') : null\n\n    let QUERY_LIST = gql`\n    query pokemon($name: String!) {\n        pokemon(name: $name) {\n          id\n          name\n          sprites {\n            front_default\n          }\n          moves {\n            move {\n              name\n            }\n          }\n          types {\n            type {\n              name\n            }\n          }\n        }\n      }\n    `;\n\n    useEffect(() => {\n        dispatch(getDetailData(idPokemon))\n    }, [dispatch, idPokemon])\n\n    const onClickBack = useCallback(() => {\n        history.goBack()\n    }, [history])\n\n    const onClickCatch = useCallback(() => {\n        var chance = Math.random();\n        if (chance < 0.5) {\n            setSuccess(false)\n        }\n        else {\n            setSuccess(true)\n        }\n    })\n\n    const onSaveCatch = useCallback(() => {\n        let _arr = detailState.myPokemon\n        _arr.push({\n            name: name,\n            pokemonDetail: detailState.detail\n        })\n\n        notification['success']({\n            message: 'Yeay, success catch a pokemon ' + detailState.detail.name + ' with name ' + name + ' !',\n        });\n\n        setSuccess(undefined)\n        setName(undefined)\n    }, [detailState, name, setName, setSuccess])\n\n    return (\n        <React.Fragment>\n            <Modal\n                title=\"Give me a name!\"\n                visible={success}\n                onOk={onSaveCatch}\n                onCancel={() => {\n                    setSuccess(undefined)\n                    setName(undefined)\n                }}\n            >\n                <Input value={name} onChange={(e) => setName(e.target.value)} />\n            </Modal>\n\n            <Query query={QUERY_LIST} variables={{ \"name\": _name }}>\n                {({ loading, error, data }) => {\n                    if (!error && data !== undefined && detailState.detail) {\n                        return (\n                            <div>\n                                <BlockUi tag=\"div\" blocking={loading}>\n                                    <Row>\n                                        <div style={{ padding: '5%', width: '100%' }}>\n                                            <Typography>\n                                                <Button type=\"default\" size={'large'} onClick={onClickBack}>Back</Button>\n                                                <Title style={{ textAlign: 'center' }}>{detailState.detail.name}</Title><br />\n                                                {_catch === 'false' && detailState.myPokemon[_index] ? <h5 style={{ textAlign: 'center' }}>The Name is '{_index !== null ? detailState.myPokemon[_index].name : ''}'</h5> : ''}\n                                                <Card\n                                                    hoverable\n                                                    style={{ width: '100%' }}\n                                                    cover={<img alt=\"pokemon-image\" src={detailState.detail.sprites.other.dream_world.front_default} />}\n                                                >\n                                                    {\n                                                        success === undefined || success === false ?\n                                                            _catch === 'true' ?\n                                                                <Button type=\"default\" shape=\"round\" size={'large'} onClick={onClickCatch}>\n                                                                    Catch Me!\n                                                                </Button>\n                                                                : null\n                                                            : null\n                                                    }\n                                                    {\n                                                        success === false ? <h4 style={{ color: 'red' }}>Oops, you can't catch me :p</h4> : null\n                                                    }\n\n                                                </Card>\n                                            </Typography>\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className=\"content-detail\">\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.front_default ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.front_default}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.front_shiny ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.front_shiny}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.back_default ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.back_default}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                            <Col span={6}>\n                                                <Image.PreviewGroup>\n                                                    {\n                                                        detailState.detail.sprites.back_shiny ?\n                                                            <Image\n                                                                width={100}\n                                                                src={detailState.detail.sprites.back_shiny}\n                                                            /> : ''\n                                                    }\n                                                </Image.PreviewGroup>\n                                            </Col>\n                                        </div>\n                                    </Row>\n                                    <Title style={{ textAlign: 'center' }}>Types</Title>\n                                    <Row style={{ paddingBottom: '10%' }}>\n                                        <div className=\"content-detail\">\n                                            <Col span={24}>\n                                                {\n                                                    detailState.detail.types.map((obj, idx) => {\n                                                        return (\n                                                            <Text key={idx} keyboard>{obj.type.name}</Text>\n                                                        )\n                                                    })\n                                                }\n                                            </Col>\n                                        </div>\n                                    </Row>\n                                </BlockUi>\n                            </div>\n                        )\n                    } else return <div></div>\n                }}\n            </Query>\n        </React.Fragment >\n    )\n}\n\nexport default Detail",["63","64"],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/detailReducer/reducer.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/stores.js",[],["65","66"],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/routes/router.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/template/headerTemplate.js",["67","68"],"import { Link } from 'react-router-dom';\nimport pokemonLogo from './../assets/images/logo_pokemon.png'\n\nimport { Menu, Dropdown } from 'antd';\nimport { MenuOutlined } from '@ant-design/icons';\n\nconst HeaderTemplate = () => {\n    return (\n        <header>\n            <Link to=\"/\"><img src={pokemonLogo} className=\"logo-style\" /></Link>\n            <div className=\"menu-nonresponsive\">\n                <Link className=\"nav-links\" to=\"/\">Home</Link>\n                <Link className=\"nav-links\" to=\"/listPokemon\">My Pokemon List</Link>\n            </div>\n\n            <div className=\"menu-responsive\">\n                <Dropdown overlay={\n                    <Menu>\n                        <Menu.Item>\n                            <a rel=\"noopener noreferrer\" href=\"/\">Home</a>\n                            {/* <Link className=\"nav-links\" to=\"/\">Home</Link> */}\n                        </Menu.Item>\n                        <Menu.Item>\n                            <a rel=\"noopener noreferrer\" href=\"/listPokemon\">My Pokemon List</a>\n                            {/* <Link className=\"nav-links\" to=\"/listPokemon\">My Pokemon List</Link> */}\n                        </Menu.Item>\n                    </Menu>\n                }>\n                    <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}><MenuOutlined />\n                    </a>\n                </Dropdown>\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderTemplate","/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/actionTypes.js",[],"/Users/muhammadfiqihfirdiansyah/Documents/Muhammad Fiqih Firdiansyah/Project/Other/web-pokemon/src/redux/reducers.js",["69"],"import DetailReducer from '../redux/detailReducer/reducer'\n\nexport default {\n    DetailReducer\n}",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":44,"column":8,"nodeType":"76","endLine":44,"endColumn":17,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":80,"column":76,"nodeType":"80","endLine":80,"endColumn":176},{"ruleId":"74","severity":1,"message":"81","line":57,"column":26,"nodeType":"82","endLine":57,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":111,"column":60,"nodeType":"80","endLine":111,"endColumn":152},{"ruleId":"70","replacedBy":"83"},{"ruleId":"72","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":26,"nodeType":"80","endLine":10,"endColumn":74},{"ruleId":"89","severity":1,"message":"90","line":29,"column":21,"nodeType":"80","endLine":29,"endColumn":88},{"ruleId":"91","severity":1,"message":"92","line":3,"column":1,"nodeType":"93","endLine":5,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: '_isMyPokemon'. Either include it or remove the dependency array.","ArrayExpression",["96"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier",["94"],["95"],["94"],["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [_isMyPokemon, history]",{"range":"99","text":"100"},[1254,1263],"[_isMyPokemon, history]"]